# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-28 05:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0012_copy_image_permissions_to_collections'),
        ('wagtailcore', '0028_merge'),
        ('category', '0002_auto_20160528_0138'),
        ('wagtaildocs', '0007_merge'),
        ('lodging', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productstype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='category.ProductsType')),
                ('product_type', models.CharField(choices=[('0', 'Servicio'), ('1', 'Consumible'), ('2', 'Almacenable')], default='0', max_length=1, verbose_name='Tipo de producto')),
                ('sku', models.CharField(blank=True, max_length=255, null=True, verbose_name='SKU')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Referencia Interna')),
                ('can_be_sold', models.BooleanField(default=True, verbose_name='Puede ser vendido')),
                ('can_be_bought', models.BooleanField(default=True, verbose_name='Puede ser comprado')),
                ('status', models.CharField(choices=[('0', 'Activo'), ('1', 'Inactivo')], default=0, max_length=1, verbose_name='Estado')),
                ('has_variants', models.BooleanField(default=False, verbose_name='Tiene variantes?')),
                ('warranty', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36)], default=0, verbose_name='Garantía en meses')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Agregar producto',
            },
            bases=('category.productstype',),
        ),
        migrations.CreateModel(
            name='ProductCarouselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('embed_url', models.URLField(blank=True, verbose_name='Embed URL')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page')),
                ('page', modelcluster.fields.ParentalKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_carousel_items', to='products.Product')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', modelcluster.fields.ParentalKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_cats_rels', to='products.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsCats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Etiqueta',
                'verbose_name_plural': 'Etiquetas',
            },
        ),
        migrations.CreateModel(
            name='ProductTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre del impuesto')),
                ('tax_field', models.CharField(choices=[('sales', 'Ventas'), ('purchases', 'Compras'), ('neither', 'Ninguno')], default='sales', max_length=255, verbose_name='Ámbito del impuesto')),
                ('tax_calculation', models.CharField(choices=[('fixed', 'Monto fijo en precio'), ('percent', 'Porcentaje en precio')], default='percent', max_length=255, verbose_name='Cálculo de impuesto')),
                ('amount_of', models.FloatField(default=0.0, verbose_name='Importe')),
                ('include_in_price', models.BooleanField(default=True, verbose_name='Incluir en el precio')),
                ('subsequent_taxable', models.BooleanField(default=False, verbose_name='Base imponible subsecuente')),
                ('apply_to_variants', models.BooleanField(default=False, verbose_name='Aplicar impuesto a variantes')),
            ],
            options={
                'verbose_name': 'Impuesto',
                'verbose_name_plural': 'Impuestos',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_type', models.CharField(blank=True, choices=[('0', 'Hotel'), ('1', 'Restaurante')], default='0', max_length=1, null=True, verbose_name='Tipo De Proveedor')),
                ('margin_rate', models.CharField(blank=True, choices=[('0', 'Fijo'), ('1', 'Porcentaje')], default='1', max_length=1, null=True, verbose_name='Tipo De Margen')),
                ('cost_price', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Precio Costo')),
                ('profit_margin', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Margen De Venta')),
                ('sale_price', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Precio Venta')),
                ('product_rel', modelcluster.fields.ParentalKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplier_product_rel', to='products.Product')),
                ('supplier_lodging_rel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_lodging_rel', to='lodging.Lodging', verbose_name='Alojamiento')),
            ],
        ),
        migrations.AddField(
            model_name='productcatrel',
            name='products_category',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='products.ProductsCats', verbose_name='Etiqueta'),
        ),
    ]
